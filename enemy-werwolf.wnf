include we:werwolf

byte array @werwolf_to_left_0[16] = [
%........,
%.1....1.,
%.1...11.,
%.111111.,
%..1..1..,
%1111111.,
%1.1111..,
%.111....,
%.....1..,
%..1.1...,
%........,
%..1.11..,
%..1.1111,
%...1..1.,
%...11...,
%..111...,
]

byte array @werwolf_to_left_1[16] = [
%.1....1.,
%.1...11.,
%.111111.,
%..1..1..,
%1111111.,
%1.1111..,
%.111....,
%........,
%....1...,
%.11..1.1,
%.11.1.11,
%........,
%.1....11,
%.11.1111,
%111....1,
%........,
]

byte array @werwolf_to_left_2[16] = [
%.1....1.,
%.1...11.,
%.111111.,
%..1..1..,
%1111111.,
%1.1111..,
%.111....,
%.....1..,
%1.111...,
%1.....11,
%...11.11,
%1.1.1...,
%111..111,
%111..111,
%.1.....1,
%........,
]

byte array @werwolf_to_left[12] = [
100,100,100, // @werwolf_to_left_0,
101,101,101, // @werwolf_to_left_1,
102,102,102, // @werwolf_to_left_0,
103,103,103, // @werwolf_to_left_2,
ANIM_END
]

// To rotate a line in emacs
// (fset 'rotate-line
//   [right ?\C-  right right right right ?\C-w right right right right ?\C-y home right ?\C-  right right ?\C-w right right ?\C-y ?\C-  right right ?\C-w right right ?\C-y home right right ?\C-t right right left ?\C-t right ?\C-t right ?\C-t home down])

byte array @werwolf_to_right_0[16] = [
%........,
%.1....1.,
%.11...1.,
%.111111.,
%..1..1..,
%.1111111,
%..1111.1,
%....111.,
%..1.....,
%...1.1..,
%........,
%..11.1..,
%1111.1..,
%.1..1...,
%...11...,
%...111..,
]

byte array @werwolf_to_right_1[16] = [
%.1....1.,
%.11...1.,
%.111111.,
%..1..1..,
%.1111111,
%..1111.1,
%....111.,
%........,
%...1....,
%1.1..11.,
%11.1.11.,
%........,
%11....1.,
%1111.11.,
%1....111,
%........,
]

byte array @werwolf_to_right_2[16] = [
%.1....1.,
%.11...1.,
%.111111.,
%..1..1..,
%.1111111,
%..1111.1,
%....111.,
%..1.....,
%...111.1,
%11.....1,
%11.11...,
%...1.1.1,
%111..111,
%111..111,
%1.....1.,
%........,
]

byte array @werwolf_to_right[12] = [
104,104,104, // @werwolf_to_right_0,
105,105,105, // @werwolf_to_right_1,
106,106,106, // @werwolf_to_right_0,
107,107,107, // @werwolf_to_right_2,
ANIM_END
]

byte RANDOM	= $D20A

// Type (Skeleton, Archer, Dark Knight, Vampire...)
byte array type[MAX_ENEMIES] = @enemy_types

// xy position of enemies
byte array xpos[MAX_ENEMIES] = @enemy_xpos
byte array ypos[MAX_ENEMIES] = @enemy_ypos

// xy movement of enemies
byte array xstep[MAX_ENEMIES] = @enemy_xstep
byte array ystep[MAX_ENEMIES] = @enemy_ystep

byte index = @enemy_index

word screen = @screen
byte topfloor

// tables for jump
byte array is_jump[MAX_ENEMIES] = @enemy_is_jump
byte array is_jump_up[MAX_ENEMIES] = @enemy_is_jump_up
byte array jump_animation[MAX_ENEMIES] = @enemy_jump_animation

//  50    x
// --- = --- ==> x = (50 * 256) / 100
// 100   256

//  x    128
// --- = --- ==> x = (128 * 100) / 256
// 100   256

//  25 = 10%
//  38 = 15%
//  51 = 20%
//  64 = 25%
//  76 = 30%
//  89 = 35%
// 102 = 40%
// 115 = 45%
// 128 = 50%
// 140 = 55%
// 153 = 60%
// 166 = 65%
// 179 = 70%
// 192 = 75%
// 205 = 80%
// 230 = 90%

byte array attack[1] = [
// 10%               15%             20%             25%         30%     35%    40% 45% 50% 55% 60% 65% 70%         75%      80%
 25, 25, 25, 25, 25, 38, 38, 38, 38, 51, 51, 51, 51, 64, 64, 64, 76, 76, 89, 89,102,115,128,140,153,166,179,179,179,192,192, 205,
205,192,192,179,179,179,166,153,140,128,115,102, 89, 89, 76, 76, 64, 64, 64, 51, 51, 51, 51, 38, 38, 38, 38, 25, 25, 25, 25, 25
]

byte array attackIndex[MAX_ENEMIES] = @attack_Index

byte dude_ypos = @dude_ypos

byte startAttack
byte i

procedure @init_werwolfs()
begin
  startAttack := 0
  for i :=0 to MAX_ENEMIES-1 do
  begin
    if type[i] == IDX_WERWOLF then
    begin
      attackIndex[i] := startAttack
      startAttack := startAttack + 32
// Wir haben aktuell nur max 2 Werwolfs sonst sollte hier nochmal angepasst werden!
//      if startAttack > 63 then startAttack := 0
    end
  end
end

procedure @werwolf_maybe_jump_up()
begin
  if xpos[index] & 3 == 1 then
  begin
    topfloor := @mem[screen + 1]
    if @isFloorToJump(topfloor) == 1 then
    begin
      if ypos[index] > dude_ypos then
      begin
        // Der Werwolf steht weiter unten, also schleunigst hoch
        if RANDOM < attack[attackIndex[index]] then // it is dynamic 10 - 80%
        begin
          // Hochspringen
          xstep[index] := 0
          is_jump[index] := 1
          jump_animation[index] := 0
        end
      end
      else
      begin
        if RANDOM < 25 then // ~10%
        begin
          // Hochspringen
          xstep[index] := 0
          is_jump[index] := 1
          jump_animation[index] := 0
        end
      end
    end
    attackIndex[index] := attackIndex[index] + 1
    if attackIndex[index] > 63 then attackIndex[index] := 0
//    @fast_gotoxy(16, 0)
//    @printff("%d %d  ", attackIndex[index], attack[attackIndex[index]])
  end
end

